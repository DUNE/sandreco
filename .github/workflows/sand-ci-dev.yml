name: SAND CI [dev]
run-name: SAND CI
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    container: almalinux/9-base
    steps:
      # # reference: https://docs.docker.com/engine/install/ubuntu/
      # # Set up Docker's apt repository.

      # ## Add Docker's official GPG key:
      # - run: sudo apt-get update
      # - run: sudo apt-get install ca-certificates curl
      # - run: sudo install -m 0755 -d /etc/apt/keyrings
      # - run: sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      # - run: sudo chmod a+r /etc/apt/keyrings/docker.asc

      # ## Add the repository to Apt sources:
      # - run: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      # - run: sudo apt-get update

      # # Install the Docker packages.
      # - run: sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      
      # # Verify that the Docker Engine installation is successful by running the hello-world image.
      # - run: sudo docker run hello-world

      # # Download AL9 image
      # - run: docker pull almalinux/9-base

      # # Install ROOT dependencies
      # # https://root.cern/install/dependencies/
      # - run: yum install -y git make cmake gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel
      # - run: yum install -y epel-release
      # # - run: ls -lrt /etc/yum.repos.d
      # # - run: yum config-manager --set-enabled powertools
      # - run: yum -y install xrootd-client-devel xrootd-libs-devel gcc-gfortran pcre-devel mesa-libGL-devel mesa-libGLU-devel glew-devel ftgl-devel mysql-devel fftw-devel cfitsio-devel graphviz-devel libuuid-devel avahi-compat-libdns_sd-devel openldap-devel python-devel python3-numpy libxml2-devel gsl-devel readline-devel qt5-qtwebengine-devel R-devel R-Rcpp-devel R-RInside-devel

      # Install ROOT v6.32.02 with the package provider yum
      - run: yum install -y epel-release
      - run: yum install -y root-6.32.02-1.el9.x86_64

      # Install GEANT4 v4.11.2 with spack
      ## https://spack-tutorial.readthedocs.io/en/latest/tutorial_basics.html
      # - run: yum install -y git
      # - run: git clone --depth=100 --branch=releases/v0.22 https://github.com/spack/spack.git spack
      # - run: cd ~/spack
      # - run: ls -lrt spack
      # - run: ls -lrt spack/share
      # - run: ls -lrt spack/share/spack
      # - run: . spack/share/spack/setup-env.sh; which spack
      # - run: which spack
      # - run: . spack/share/spack/setup-env.sh; spack install geant4@11.2.1

      ## https://github.com/spack/setup-spack
      # - name: Set up Spack
      #   uses: spack/setup-spack@v2
      #   with:
      #     ref: develop      # Spack version (examples: develop, releases/v0.21)
      #     buildcache: true  # Configure oci://ghcr.io/spack/github-actions-buildcache
      #     color: true       # Force color output (SPACK_COLOR=always)
      #     path: spack       # Where to clone Spack
      # - run: spack install geant4@11.2.1

      ## https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/index.html
      - run: curl -O https://geant4-data.web.cern.ch/releases/lib4.11.2.p02/Linux-g++11.4.1-Alma9.tar.gz
      - run: tar xzf Linux-g++11.4.1-Alma9.tar.gz

      # Imstall cmake
      - run: yum install -y cmake-3.26.5-2.el9.x86_64

      # Install edepsim
      ## https://github.com/ClarkMcGrew/edep-sim
      - run: mkdir edep-sim && cd edep-sim
      - run: git clone --depth 1 --branch 3.2.0 https://github.com/ClarkMcGrew/edep-sim.git source
      - run: mkdir build  && cd build
      - run: cmake -DCMAKE_INSTALL_PREFIX=.. -DCMAKE_MODULE_PREFIX=../../Geant4-11.2.2-Linux/lib64/cmake/Geant4 ../source
      - run: make -j64 install
      
      
      
